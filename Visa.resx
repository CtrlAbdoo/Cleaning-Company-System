<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>